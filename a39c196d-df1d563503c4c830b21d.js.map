{"version":3,"file":"a39c196d-df1d563503c4c830b21d.js","mappings":"iNAUA,MAAMA,GAAQC,EAAAA,EAAAA,IAAG,+EAIMC,EAAAA,GAAAA,GAAc,6DAM/BC,GAAOF,EAAAA,EAAAA,IAAG,mXAkBOC,EAAAA,GAAAA,GAAc,8GAS/BE,GAAYH,EAAAA,EAAAA,IAAG,uFAMEC,EAAAA,GAAAA,GAAc,wCAM/BG,GAAQJ,EAAAA,EAAAA,IAAG,SACNK,EAAAA,GAAAA,UAAgB,gBACVC,EAAAA,GAAAA,UAAe,8EAO1BC,EAAY,CAAHC,KAAAA,SAAAC,OAAAA,mCAGd,OAAAD,KAAAA,SAAAC,OAAAA,oDAAA,GAAAD,KAAAA,SAAAC,OAAAA,wBAAA,GAAAD,KAAAA,UAAAC,OAAAA,mCA8CD,UA5C+DC,IAAc,IAAb,KAAEC,GAAM,EACtE,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAM,MACLD,EAAAA,EAAAA,IAAAA,MAAAA,CAAKZ,IAAKD,GAEVY,EAAKG,OAAOC,MAAMC,KAAKC,IAAI,qBACzBL,EAAAA,EAAAA,IAAAA,UAAAA,CAASZ,IAAKE,EAAMgB,IAAKD,EAAKE,KAEV,QAAhB,EAAAF,EAAKG,mBAAW,aAAhBC,EAAkBC,OAClBV,EAAAA,EAAAA,IAACW,EAAAA,EACC,CACAC,OAAOC,EAAAA,EAAAA,GAAyB,QAAjB,EAACR,EAAKG,mBAAW,aAAhBM,EAAkBJ,KAClCtB,IAAKG,EACLwB,IAAKV,EAAKE,MAGdP,EAAAA,EAAAA,IAAAA,MAAAA,CAAKZ,IAAG,IAKNY,EAAAA,EAAAA,IAACgB,EAAAA,GAAI,CACHC,GAAE,KAAsB,QAAtB,EAAMZ,EAAKG,mBAAW,aAAhBU,EAAkBC,MAC1B/B,IAAG,IAIHY,EAAAA,EAAAA,IAAAA,KAAAA,CAAIZ,IAAKI,GAAwB,QAAlB,EAAEa,EAAKG,mBAAW,aAAhBY,EAAkB5B,SAErCQ,EAAAA,EAAAA,IAAAA,IAAAA,CAAGZ,IAAG,GAIFiB,EAAKgB,UACTrB,EAAAA,EAAAA,IAAAA,OAAAA,CAAMZ,IAAKO,GAA4B,QAAlB,EAAEU,EAAKG,mBAAW,aAAhBc,EAAkBC,OAEnC,KAIL,EAMN,MAqBMC,EAAe,KAAMxB,EAAAA,EAAAA,IAAAA,QAAAA,KAAO,Y","sources":["webpack://johan-s-blog/./src/pages/index.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from '@emotion/react'\nimport { HeadFC, Link, PageProps, graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport { breakpoints, colors, fonts } from '../components/theme'\n\n// demo https://flexible-gatsby.netlify.app/\n\nconst posts = css`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 20px 20px 20px 260px;\n  @media (max-width: ${breakpoints[0]}px) {\n    padding: 20px;\n    justify-content: space-between;\n  }\n`\n\nconst post = css`\n  margin-bottom: 1.5rem;\n  display: flex;\n  background-color: #FFFFFF;\n  border-radius: 10px;\n  box-sizing: border-box;\n  align-items: stretch;\n  box-shadow: 0 1px 1px 0 rgb(31 35 46 / 15%);\n  overflow: hidden;\n  transition-duration: .3s;\n  transition-property: all;\n  &:hover {\n    transform: translate(0px, -2px);\n    box-shadow: 0px 15px 45px -10px rgba(10, 16, 34, .2);\n  }\n\n  flex-direction: row;\n  width: 100%;\n  @media (max-width: ${breakpoints[1]}px) {\n    width: 48%;\n    margin: 0 .9% 1.5%;\n    flex-direction: column;\n    box-sizing: border-box;\n    align-items: stretch;\n  }\n`\n\nconst thumbnail = css`\n  background-position: 50% 50%;\n  max-width: 100%;\n\n  height: 100%;\n  width: 30%;\n  @media (max-width: ${breakpoints[1]}px) {\n    width: 100%;\n    height: 30%;\n  }\n`\n\nconst title = css`\n  color: ${colors.secondary};\n  font-family: ${fonts.secondary};\n  font-weight: 300;\n  font-size: 30px;\n  line-height: 45px;\n  margin: 0 0 10px;\n`\n\nconst smallText = css`\n  font-size: 12px;\n  line-height: 18px;\n`\n\nconst IndexPage: React.FC<PageProps<Queries.IndexPageQuery>> = ({ data }) => {\n  return (\n    <Layout>\n      <div css={posts}>\n      {\n      data.allMdx.nodes.map( node => (\n        <article css={post} key={node.id}>\n          {\n            node.frontmatter?.img &&\n            <GatsbyImage\n              // @ts-ignore\n              image={getImage(node.frontmatter?.img)}\n              css={thumbnail}\n              alt={node.id}\n            />\n          }\n          <div css={css`\n              width: 70%;\n              padding: 1rem;\n              margin: 0;\n          `}>\n            <Link\n              to={`/${node.frontmatter?.slug}`}\n              css={css`\n                text-decoration: none;\n              `}\n            >\n              <h2 css={title}>{node.frontmatter?.title}</h2>\n            </Link>\n            <p css={css`\n              font-weight: 300;\n              line-height: 24px;\n              margin: 0 0 10px;\n            `}>{node.excerpt}</p>\n            <span css={smallText}>{node.frontmatter?.date}</span>\n          </div>\n        </article>\n      ))\n      }\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\nquery IndexPage {\n  allMdx(sort: {frontmatter: {date: DESC}}) {\n    nodes {\n      id\n      frontmatter {\n        title\n        slug\n        date(formatString: \"YYYY, MMM DD\")\n        img {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n      excerpt\n    }\n  }\n}\n`\n\nexport const Head: HeadFC = () => <title>Home Page</title>\n"],"names":["posts","css","breakpoints","post","thumbnail","title","colors","fonts","smallText","name","styles","_ref4","data","jsx","Layout","allMdx","nodes","map","node","key","id","frontmatter","_node$frontmatter","img","GatsbyImage","image","getImage","_node$frontmatter2","alt","Link","to","_node$frontmatter3","slug","_node$frontmatter4","excerpt","_node$frontmatter5","date","Head"],"sourceRoot":""}