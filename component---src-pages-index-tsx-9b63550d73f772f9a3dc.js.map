{"version":3,"file":"component---src-pages-index-tsx-9b63550d73f772f9a3dc.js","mappings":"0NASA,MAAMA,GAAO,cAAAC,OAAAA,YAAA,EAAAC,KAAAA,SAAAC,OAAAA,6DAMPC,GAAI,kBAAAH,OAAAA,YAAA,EAAAC,KAAAA,UAAAC,OAAAA,kWAmBJE,GAAYC,EAAAA,EAAAA,GAAOC,EAAAA,EAAW,CAAAN,OAAAA,YAAlBK,CAAmB,CAAAJ,KAAAA,SAAAC,OAAAA,sFAQ/BK,GAAW,cAAAP,OAAAA,YAAA,EAAAC,KAAAA,UAAAC,OAAAA,oCAMXM,GAAK,aAAAR,OAAAA,YAAA,EAAAC,KAAAA,SAAAC,OAAAA,+GASLO,GAAO,YAAAT,OAAAA,YAAA,EAAAC,KAAAA,SAAAC,OAAAA,8GASPQ,GAAI,eAAAV,OAAAA,YAAA,EAAAC,KAAAA,SAAAC,OAAAA,8FAuCV,UA/B+DS,IAAc,IAAb,KAAEC,GAAM,EACtE,OACEC,EAAAA,EAAAA,IAACC,EAAAA,GAAM,MACLD,EAAAA,EAAAA,IAACE,EAAAA,EAAO,OACRF,EAAAA,EAAAA,IAACd,EAAO,KAERa,EAAKI,OAAOC,MAAMC,KAAKC,IAAI,qBACzBN,EAAAA,EAAAA,IAACV,EAAI,CAACiB,IAAKD,EAAKE,KAEI,QAAhB,EAAAF,EAAKG,mBAAW,aAAhBC,EAAkBC,OAElBX,EAAAA,EAAAA,IAACT,EAAS,CAACqB,OAAOC,EAAAA,EAAAA,GAAyB,QAAjB,EAACP,EAAKG,mBAAW,aAAhBK,EAAkBH,KAAMI,IAAKT,EAAKE,MAE/DR,EAAAA,EAAAA,IAACN,EAAW,MACVM,EAAAA,EAAAA,IAACgB,EAAAA,GAAI,CAACC,GAAE,KAAsB,QAAtB,EAAMX,EAAKG,mBAAW,aAAhBS,EAAkBC,MAAQC,MAAO,CAE7C,eAAkB,UAElBpB,EAAAA,EAAAA,IAACL,EAAK,KAAkB,QAAlB,EAAEW,EAAKG,mBAAW,aAAhBY,EAAkBC,SAE5BtB,EAAAA,EAAAA,IAACJ,EAAO,KAAEU,EAAKiB,UACfvB,EAAAA,EAAAA,IAACH,EAAI,KAAkB,QAAlB,EAAES,EAAKG,mBAAW,aAAhBe,EAAkBC,OAEtB,KAIF,EAMN,MAqBMC,EAAe,KAAM1B,EAAAA,EAAAA,IAAAA,QAAAA,KAAO,Y","sources":["webpack://johan-s-blog/./src/pages/index.tsx"],"sourcesContent":["import styled from '@emotion/styled'\nimport { HeadFC, Link, PageProps, graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport Sidebar from '../components/sidebar'\n\n// demo https://flexible-gatsby.netlify.app/\n\nconst Content = styled.div`\n  padding: 20px 20px 20px 260px;\n  display: flex;\n  flex-wrap: wrap;\n`\n\nconst Post = styled.article`\n  margin-bottom: 1.5rem;\n  display: flex;\n  flex-direction: row;\n  background-color: #FFFFFF;\n  border-radius: 10px;\n  width: 100%;\n  box-sizing: border-box;\n  align-items: stretch;\n  box-shadow: 0 1px 1px 0 rgb(31 35 46 / 15%);\n  overflow: hidden;\n  transition-duration: .3s;\n  transition-property: all;\n  &:hover {\n    transform: translate(0px, -2px);\n    box-shadow: 0px 15px 45px -10px rgba(10, 16, 34, .2);\n  }\n`\n\nconst Thumbnail = styled(GatsbyImage)`\n  height: 100%;\n  width: 30%;\n  background-position: 50% 50%;\n  max-width: 100%;\n  min-height: 11rem;\n`\n\nconst TextPreview = styled.div`\n  width: 70%;\n  padding: 1rem;\n  margin: 0;\n`\n\nconst Title = styled.h2`\n  font-family: 'PT Serif', serif;\n  font-weight: 300;\n  font-size: 30px;\n  color: #263959;\n  line-height: 45px;\n  margin: 0 0 10px;\n`\n\nconst Excerpt = styled.p`\n  font-family: Lato, sans-serif;\n  font-weight: 300;\n  font-size: 16px;\n  color: #515151;\n  line-height: 24px;\n  margin: 0 0 10px;\n`\n\nconst Date = styled.span`\n  font-family: Lato, sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  color: #515151;\n  line-height: 18px;\n`\n\nconst IndexPage: React.FC<PageProps<Queries.IndexPageQuery>> = ({ data }) => {\n  return (\n    <Layout>\n      <Sidebar/>\n      <Content>\n      {\n      data.allMdx.nodes.map( node => (\n        <Post key={node.id}>\n          {\n            node.frontmatter?.img &&\n            // @ts-ignore\n            <Thumbnail image={getImage(node.frontmatter?.img)} alt={node.id}/>\n          }\n          <TextPreview>\n            <Link to={`/${node.frontmatter?.slug}`} style={{\n              // @ts-ignore\n              'textDecoration': 'none',\n            }}>\n              <Title>{node.frontmatter?.title}</Title>\n            </Link>\n            <Excerpt>{node.excerpt}</Excerpt>\n            <Date>{node.frontmatter?.date}</Date>\n          </TextPreview>\n        </Post>\n      ))\n      }\n      </Content>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\nquery IndexPage {\n  allMdx(sort: {frontmatter: {date: DESC}}) {\n    nodes {\n      id\n      frontmatter {\n        title\n        slug\n        date(formatString: \"YYYY, MMM DD\")\n        img {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n      excerpt\n    }\n  }\n}\n`\n\nexport const Head: HeadFC = () => <title>Home Page</title>\n"],"names":["Content","target","name","styles","Post","Thumbnail","_styled","GatsbyImage","TextPreview","Title","Excerpt","Date","_ref","data","___EmotionJSX","Layout","Sidebar","allMdx","nodes","map","node","key","id","frontmatter","_node$frontmatter","img","image","getImage","_node$frontmatter2","alt","Link","to","_node$frontmatter3","slug","style","_node$frontmatter4","title","excerpt","_node$frontmatter5","date","Head"],"sourceRoot":""}